<launch>
    <node pkg="fire_detector" name="fire_detector_node" type="fire_detector_node" output="screen">
    <param name="bag_path" type = "str" value="$(find fire_detector)/videos/20230626_141447.bag"/>
    </node>


    <node pkg="yolov7_ros" type="detect_ros.py" name="detect" output="screen" ns="yolov7">
        <!-- path to tourch weights file -->
        <param name="weights_path" type="str"
        value="$(find fire_detector)/weights/Fire-Detector-yolov7.pt"/>
      
        <!-- Path to a class labels file -->
        <!-- TODO: relative path -->
        <param name="classes_path" type="str" value="$(find fire_detector)/class_labels/coco.txt" />
        <!-- topic name to subscribe to -->
        <param name="img_topic" type="str" value="/device_0/sensor_1/Color_0/image/data" />
        <!-- topic name for the detection output -->
        <param name="out_topic" type="str" value="yolov7" />
        <!-- confidence threshold -->
        <param name="conf_thresh" type="double" value="0.35" />
        <!-- intersection over union threshold -->
        <param name="iou_thresh" type="double" value="0.45" />
        <!-- queue size for publishing -->
        <param name="queue_size" type="int" value="1" />
        <!-- image size to which to resize each input image before feeding into the
        network (the final output is rescaled to the original image size) -->
        <param name="img_size" type="int" value="640" />
        <!-- flag whether to also publish image with the visualized detections -->
        <param name="visualize" type="bool" value="true" />
        <!-- 'cuda' or 'cpu' -->
        <param name="device" type="str" value="cuda" />
    </node>

</launch>
